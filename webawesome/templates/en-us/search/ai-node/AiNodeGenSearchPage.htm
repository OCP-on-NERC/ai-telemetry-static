{% extends "en-us/PageLayout.htm" %}

{%- block htmTitlePageLayout %}
{%- block htmTitleAiNodePage %}
    <title>{% if resultCount == 0 %}no AI node found{% else %}AI nodes{% endif %}</title>
{%- endblock htmTitleAiNodePage %}
{%- endblock htmTitlePageLayout %}

{%- block htmStylesPageLayout %}
{{ super() }}
    <link rel="stylesheet" href="{{ staticBaseUrl }}/css/en-us/search/ai-node/AiNode.css"/>
{%- block htmStylesAiNodePage %}
{%- endblock htmStylesAiNodePage %}
{%- endblock htmStylesPageLayout %}

{%- block htmStylePageLayout %}
      :root {
        --site-results-number-of-columns: 3;
      }
{{ super() }}
{%- block htmStyleAiNodePage %}
{%- endblock htmStyleAiNodePage %}
{%- endblock htmStylePageLayout %}

{%- block htmScriptsPageLayout %}
{{ super() }}
{%- block htmScriptsAiNodePage %}
    <script src="{{staticBaseUrl}}/js/en-us/search/ai-node/AiNode.js"></script>
    <script type="module" src="{{staticBaseUrl}}/js/en-us/search/ai-node/AiNodeSearchPage.js"></script>
    <script src="{{staticBaseUrl}}/js/en-us/search/hub/Hub.js"></script>
    <script src="{{staticBaseUrl}}/js/en-us/search/cluster/Cluster.js"></script>
{%- endblock htmScriptsAiNodePage %}
{%- endblock htmScriptsPageLayout %}

{%- block htmScriptPageLayout %}
{%- block htmScriptAiNodePage %}
    <script>

      function jsWebsocketAiNode(nodeResource, vars, $response) {
{%- block jsWebsocketAiNodePage %}{%- endblock %}
      }

      function jsTooltipAiNode(e, feature) {
{%- block jsTooltipAiNodePage %}{%- endblock %}
      }

      function htmTooltipAiNode(feature, layer) {
        return `{%- block htmTooltipAiNodePage %}
<h3><wa-icon class="{{ classIconCssClasses }}  "></wa-icon><a href="${quoteattr(feature.properties.editPage)}">${feature.properties.objectTitle}</a></h3>
{%- endblock htmTooltipAiNodePage %}`;
      }

      function jsLegendAiNode(map) {
{%- block jsLegendAiNodePage %}
        var div = L.DomUtil.create('div', 'info legend');
        var htm = '';
        window.listAiNode.forEach((result, index) => {
          if(result.location) {
            var shapes = [];
            if(Array.isArray(result.location))
              shapes = shapes.concat(result.location);
            else
              shapes.push(result.location);
            shapes.forEach(function(shape, index) {
              htm += htmLegendAiNode(map, shape, result, index, shapes.length);
            });
          }
        });
        div.innerHTML = htm;
        return div;
{%- endblock jsLegendAiNodePage %}
      }

      function htmLegendAiNode(map, shape, result, index, count) {
        var color = result.locationColors[index];
        var title = result.locationTitles[index];
        var url = result.locationLinks[index];
        var htm = '';
        htm += `<div class="cursor-pointer " style="max-width: 400px; ">
`;
        htm += `{%- block htmLegendAiNodePage %}
    <div title="${quoteattr(title)}">
    <div style="width: 20px; ">
      <wa-icon class="{{ FONTAWESOME_STYLE }} fa-circle" style="color: ${color}; "></wa-icon>
    </div>
    <div class="text-overflow-ellipsis ">
      <span class="" data-solrId="${result.solrId}" onclick="window.mapLayers[this.getAttribute('data-solrId')].openPopup(); return false;" href="">${title}</span>
    </div>
    </div>
{%- endblock htmLegendAiNodePage %}`;
        htm += `
</div>
`;
        return htm;
      }

      function jsStyleAiNode(feature) {
{%- block jsStyleAiNodePage %}
        if(feature.geometry.type == 'Point') {
          return {
            radius: 8
            , fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 1
            , opacity: 0.7
            , fillOpacity: 0.7
            , contextmenu: true
            , contextmenuItems: [
              {
                text: 'Show coordinates'
                , callback: function(event) {
                  alert(event2.target.getLatLngs());
                }
              }
            ]
          };
        } else if(feature.geometry.type == 'LineString') {
          return {
            color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 5
            , opacity: 0.7
          };
        } else {
          return {
             fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 3
            , opacity: 0.7
            , fillOpacity: 0.7
          };
        }
{%- endblock jsStyleAiNodePage %}
      }
    </script>
    <script type="module">
{% if DEFAULT_MAP_LOCATION is defined %}
      window.DEFAULT_MAP_LOCATION = { type: 'Point', coordinates: [ {{ DEFAULT_MAP_LOCATION.coordinates[0] }}, {{ DEFAULT_MAP_LOCATION.coordinates[1] }} ]};
{% endif %}
{% if DEFAULT_MAP_ZOOM is defined %}
      window.DEFAULT_MAP_ZOOM = {{ DEFAULT_MAP_ZOOM }};
{% endif %}
      window.DEFAULT_ZONE_ID = '{{ defaultZoneId }}';
      Promise.all([
        customElements.whenDefined('wa-button')
        , customElements.whenDefined('wa-input')
        , customElements.whenDefined('wa-select')
      ]).then(() => {

        var nodeResource = {% if result.nodeResource is defined %}{{ result.nodeResource | tojson }}{% else %}null{% endif %};

          function relate_hubResource(event) {
            suggestAiNodeHubResource(
                event.target.value ? [ { 'name': 'q', 'value': 'objectSuggest:' + event.target.value }
                , { 'name': 'rows', 'value': '10' }
                , { 'name': 'fl', 'value': 'classCanonicalName,hubResource,pk,editPage,objectTitle' } ] : [{%- if result.hubResource is defined %}{'name':'fq','value':'hubResource:{{ result.hubResource }}'}{%- else %}{%- endif %}]
                , document.querySelector('#' + event.target.getAttribute('data-list'))
                , null
                , null
                , true
                , this
                );
          }
          document.querySelector('#POST_hubResource')?.addEventListener('input', relate_hubResource);
          document.querySelector('#POST_hubResource')?.addEventListener('focus', relate_hubResource);
          document.querySelector('#PATCH_hubResource')?.addEventListener('input', relate_hubResource);
          document.querySelector('#PATCH_hubResource')?.addEventListener('focus', relate_hubResource);
          function relate_clusterResource(event) {
            suggestAiNodeClusterResource(
                event.target.value ? [ { 'name': 'q', 'value': 'objectSuggest:' + event.target.value }
                , { 'name': 'rows', 'value': '10' }
                , { 'name': 'fl', 'value': 'classCanonicalName,clusterResource,pk,editPage,objectTitle' } ] : [{%- if result.clusterResource is defined %}{'name':'fq','value':'clusterResource:{{ result.clusterResource }}'}{%- else %}{%- endif %}]
                , document.querySelector('#' + event.target.getAttribute('data-list'))
                , null
                , null
                , true
                , this
                );
          }
          document.querySelector('#POST_clusterResource')?.addEventListener('input', relate_clusterResource);
          document.querySelector('#POST_clusterResource')?.addEventListener('focus', relate_clusterResource);
          document.querySelector('#PATCH_clusterResource')?.addEventListener('input', relate_clusterResource);
          document.querySelector('#PATCH_clusterResource')?.addEventListener('focus', relate_clusterResource);
        if(nodeResource == null) {
          document.querySelector('#grid-toggle-details')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-list', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-details');
          });
          document.querySelector('#grid-toggle-list')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-list');
          });
          document.querySelector('#grid-toggle-card')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-list');
            document.querySelector('#site-results-grid').classList.add('grid-mode-card');
          });
        } else {
          var o = document.querySelector('.pageForm .result')?.value;
          if(o)
            window.result = JSON.parse(o);
        {% if result.nodeResource is defined %}
        {% endif %}
        }
        var l = document.querySelector('.pageForm .listAiNode')?.value;
        if(l)
          window.listAiNode = JSON.parse(l);
        window.varsFq = JSON.parse('{{ toJsonObjectStringInApostrophes(varsFq) }}');
        window.varsRange = JSON.parse('{{ toJsonObjectStringInApostrophes(varsRange) }}');
        window.defaultRangeVar = '{{ defaultRangeVar }}';
        pageGraphAiNode();
        {% for key, value in varsQ.items() %}

        document.querySelector('#qAiNode_{{ key }}')?.addEventListener('wa-{% if var == 'objectSuggest' %}keyup{% else %}change{% endif %}', event => {
          qChange('AiNode', event.target, document.querySelector('#qAiNodeDiv_{{ key }}'));
        });
        {% endfor %}

        document.querySelector('#qAiNode_rows')?.addEventListener('change', event => {
          paramChange('AiNode', event.target, document.querySelector('#qAiNodeDiv_rows'));
        });

        document.querySelector('#qAiNode_start')?.addEventListener('change', event => {
          paramChange('AiNode', event.target, document.querySelector('#qAiNodeDiv_start'));
        });


        var submitForm_patchAiNode = document.querySelector('#htmForm_patchAiNode')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_patchAiNode')?.addEventListener('click', event => {
          event.preventDefault();
          patchAiNode(null, document.querySelector('#htmForm_patchAiNode'), document.querySelector('#htmFormButton_patchAiNode'), event.target.getAttribute('data-nodeResource'));
          return false;
        });

        var submitForm_postAiNode = document.querySelector('#htmForm_postAiNode')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_postAiNode')?.addEventListener('click', event => {
          event.preventDefault();
          postAiNode(document.querySelector('#htmForm_postAiNode')
          , document.querySelector('#htmFormButton_postAiNode')
          , (json, target) => {
            window.location.href = json.editPage;
          });
          return false;
        });

        var submitForm_deleteAiNode = document.querySelector('#htmForm_deleteAiNode')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_deleteAiNode')?.addEventListener('click', event => {
          event.preventDefault();
          deleteAiNode(event.target, event.target.getAttribute('data-nodeResource'));
          return false;
        });

        var submitForm_putimportAiNode = document.querySelector('#htmForm_putimportAiNode')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_putimportAiNode')?.addEventListener('click', event => {
          event.preventDefault();
          putimportAiNode(document.querySelector('#htmForm_putimportAiNode'), document.querySelector('#htmFormButton_putimportAiNode'));
          return false;
        });

        var submitForm_searchpageAiNode = document.querySelector('#htmForm_searchpageAiNode')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_searchpageAiNode')?.addEventListener('click', event => {
          event.preventDefault();
          searchpageAiNode();
          return false;
        });

        var submitForm_deletefilterAiNode = document.querySelector('#htmForm_deletefilterAiNode')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_deletefilterAiNode')?.addEventListener('click', event => {
          event.preventDefault();
          deletefilterAiNode(event.target);
          return false;
        });
{%- block htmScriptInitAiNodePage %}{%- endblock htmScriptInitAiNodePage %}
      });
    </script>
{%- endblock htmScriptAiNodePage %}
{%- endblock htmScriptPageLayout %}

{%- block websocketPageLayout %}
{%- block websocketAiNodePage %}
{% if resultCount > 0 %}
        window.eventBus = new EventBus('/eventbus');
        window.eventBus.enableReconnect(true);
        websocketAiNode(websocketAiNodeInner);
{% endif %}
{%- endblock websocketAiNodePage %}
{%- endblock websocketPageLayout %}

{%- block htmUrlAiNodePage %}{{pageUri}}?q={{query.q}}&amp;rows={% if rows is defined %}{{rows}}{% else %}{{pagination.rows}}{% endif %}&amp;rows={% if start is defined %}{{start}}{% else %}{{pagination.start}}{% endif %}{% for item query.fq %}{% if fq == item %}{% else %}&fq={{fq}}:{{val}}{% endif %}{% endfor %}{% for item in query.sort %}{% if sort == item %}{% else %}&sort={{var}} {{order}}{% endif %}{% endfor %}{%- endblock htmUrlAiNodePage %}

{%- block htmBodyStartPageLayout %}
{{ super() }}
{%- block htmBodyStartAiNodePage %}
{%- endblock htmBodyStartAiNodePage %}
{%- endblock htmBodyStartPageLayout %}

{%- block htmBodyMiddlePageLayout %}
{%- block htmBodyMiddleAiNodePage %}
{% if resultCount == 0 %}
        <div class="wa-stack ">
          <wa-tooltip for="return-to-AiNode">back to all AI nodes</wa-tooltip></wa-tooltip>
          <wa-breadcrumb>
            <wa-breadcrumb-item id="return-to-AiNode" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
              <i class="fa-regular fa-computer"></i>
              all AI nodes
            </wa-breadcrumb-item>
            <wa-breadcrumb-item>
              no AI node found
            </wa-breadcrumb-item>
          </wa-breadcrumb>
          <div class="wa-stack wa-align-items-center ">
            <div class="wa-heading-3xl ">
              <i class="fa-regular fa-computer"></i>
            </div>
            <span class="wa-heading-m ">no AI node found</span>
            <p class="wa-caption-l ">A Red Hat OpenShift node containing GPUs</p>
{% include en-us/search/ai-node/AiNodeSearchForm.htm %}
          </div>
        </div>
{% else %}
{%- include en-us/search/ai-node/AiNodeSidebar.htm %}
{%- include en-us/search/ai-node/AiNodeSuggestedSearch.htm %}
          <div>
            <form action="/en-us/api/ai-node" id="AiNodeForm" class="pageForm " onsubmit="event.preventDefault(); return false; ">
              <input name="focusId" type="hidden"/>
              <input name="pageResponse" id="pageResponse" class="pageResponse"  value='{{ toJsonObjectStringInApostrophes(pageResponse) }}' type="hidden"/>
              <input name="listAiNode" id="listAiNode" class="listAiNode"  value='{{ toJsonArrayStringInApostrophes(listAiNode) }}' type="hidden"/>
            </form>
            <div id="site-calendar-box">
              <div id="site-calendar"><!-- // --></div>
            </div>
            <div class="wa-stack wa-gap-m ">
              <wa-tooltip for="return-to-AiNode">back to all AI nodes</wa-tooltip>
              <wa-breadcrumb>
                <wa-breadcrumb-item id="return-to-AiNode" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
                  <i class="fa-regular fa-computer"></i>
                  all AI nodes
                </wa-breadcrumb-item>
                <wa-breadcrumb-item>
                  search AI nodes
                </wa-breadcrumb-item>
              </wa-breadcrumb>
{% include en-us/search/ai-node/AiNodeSearchForm.htm %}
{% include en-us/search/ai-node/AiNodeSearchButtons.htm %}
              <div class="wa-stack wa-gap-0 ">
{% include en-us/search/ai-node/AiNodePaginationButtons.htm %}
                <div class="card-like-thing background-color-surface-border" id="site-results-grid">
                  <div>
              <wa-dropdown id="htmDropdown-hubId">
                <wa-button variant="brand" slot="trigger" caret>ACM Hub</wa-button>
                <wa-menu>
                  <wa-menu-item onclick="var e = document.querySelector('#pageFacetSortAiNode_hubId'); e.value = this.getAttribute('data-order'); document.querySelectorAll('.pageSearchVal-pageSort-AiNode').forEach(e => e.remove()); e.dispatchEvent(new Event('change', {})); " data-action="sort" data-order="asc" id="htmDropdown-hubId-asc">
                    <wa-icon class="{{ FONTAWESOME_STYLE }} fa-arrow-down-a-z"></wa-icon>
                    sort by ACM Hub ascending
                  </wa-menu-item>
                  <wa-menu-item onclick="var e = document.querySelector('#pageFacetSortAiNode_hubId'); e.value = this.getAttribute('data-order'); document.querySelectorAll('.pageSearchVal-pageSort-AiNode').forEach(e => e.remove()); e.dispatchEvent(new Event('change', {})); " data-action="sort" data-order="desc" id="htmDropdown-hubId-desc">
                    <wa-icon class="{{ FONTAWESOME_STYLE }} fa-arrow-down-z-a"></wa-icon>
                    sort by ACM Hub descending
                  </wa-menu-item>
                </wa-menu>
              </wa-dropdown>
              <wa-dropdown id="htmDropdown-clusterName">
                <wa-button variant="brand" slot="trigger" caret>cluster name</wa-button>
                <wa-menu>
                  <wa-menu-item onclick="var e = document.querySelector('#pageFacetSortAiNode_clusterName'); e.value = this.getAttribute('data-order'); document.querySelectorAll('.pageSearchVal-pageSort-AiNode').forEach(e => e.remove()); e.dispatchEvent(new Event('change', {})); " data-action="sort" data-order="asc" id="htmDropdown-clusterName-asc">
                    <wa-icon class="{{ FONTAWESOME_STYLE }} fa-arrow-down-a-z"></wa-icon>
                    sort by cluster name ascending
                  </wa-menu-item>
                  <wa-menu-item onclick="var e = document.querySelector('#pageFacetSortAiNode_clusterName'); e.value = this.getAttribute('data-order'); document.querySelectorAll('.pageSearchVal-pageSort-AiNode').forEach(e => e.remove()); e.dispatchEvent(new Event('change', {})); " data-action="sort" data-order="desc" id="htmDropdown-clusterName-desc">
                    <wa-icon class="{{ FONTAWESOME_STYLE }} fa-arrow-down-z-a"></wa-icon>
                    sort by cluster name descending
                  </wa-menu-item>
                </wa-menu>
              </wa-dropdown>
              <wa-dropdown id="htmDropdown-nodeName">
                <wa-button variant="brand" slot="trigger" caret>node name</wa-button>
                <wa-menu>
                  <wa-menu-item onclick="var e = document.querySelector('#pageFacetSortAiNode_nodeName'); e.value = this.getAttribute('data-order'); document.querySelectorAll('.pageSearchVal-pageSort-AiNode').forEach(e => e.remove()); e.dispatchEvent(new Event('change', {})); " data-action="sort" data-order="asc" id="htmDropdown-nodeName-asc">
                    <wa-icon class="{{ FONTAWESOME_STYLE }} fa-arrow-down-a-z"></wa-icon>
                    sort by node name ascending
                  </wa-menu-item>
                  <wa-menu-item onclick="var e = document.querySelector('#pageFacetSortAiNode_nodeName'); e.value = this.getAttribute('data-order'); document.querySelectorAll('.pageSearchVal-pageSort-AiNode').forEach(e => e.remove()); e.dispatchEvent(new Event('change', {})); " data-action="sort" data-order="desc" id="htmDropdown-nodeName-desc">
                    <wa-icon class="{{ FONTAWESOME_STYLE }} fa-arrow-down-z-a"></wa-icon>
                    sort by node name descending
                  </wa-menu-item>
                </wa-menu>
              </wa-dropdown>
                  </div>
                  {% for item in listAiNode%}
                  <div>
              <a href="{{ item.displayPage }}">
                <i class="fa-regular fa-computer"></i>
              <span>{{ item.hubId | e }}
</span>              </a>
              <a href="{{ item.displayPage }}">
              <span>{{ item.clusterName | e }}
</span>              </a>
              <a href="{{ item.displayPage }}">
              <span>{{ item.nodeName | e }}
</span>              </a>
                  </div>
                  {% endfor %}
              {% if getColumnHubId is defined %}
                <div>
                </div>
              {% endif %}
              {% if getColumnClusterName is defined %}
                <div>
                </div>
              {% endif %}
              {% if getColumnNodeName is defined %}
                <div>
                </div>
              {% endif %}
                </div>
{% include en-us/search/ai-node/AiNodePaginationButtons.htm %}
              </div>
            </div>
          </div>
{% endif %}
{%- endblock htmBodyMiddleAiNodePage %}
{%- endblock htmBodyMiddlePageLayout %}

{%- block htmBodyEndPageLayout %}
  {{ super() }}
{%- block htmBodyEndAiNodePage %}
{%- endblock htmBodyEndAiNodePage %}
{%- endblock htmBodyEndPageLayout %}
