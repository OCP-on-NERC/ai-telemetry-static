{%- macro inputPkAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_pk">
  {%- endif %}
                  <wa-input
                      readonly
                      placeholder="[Long] primary key"
                      label="primary key"
                      type="number"
                      hint="
The primary key of this object in the database"
                      id="{{classApiMethodMethod}}_pk"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_pk setPk classAiNode inputAiNode{{ result.nodeResource }}Pk "
                      name="setPk"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_pk setPk classAiNode inputAiNode{{ result.nodeResource }}Pk "
                      name="setPk"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_pk valuePk classAiNode inputAiNode{{ result.nodeResource }}Pk "
                      name="pk"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.pk | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmPkAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputPkAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputCreatedAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_created">
  {%- endif %}
                  <wa-input
                      type="datetime-local"
                      readonly
                      hint="A created timestamp for this record in the database"
                      label="created {{ formatZonedDateTime(result.created, "'['VV']'", defaultLocaleId, defaultZoneId) | e }}"
                      class="label-on-left {{classApiMethodMethod}}_created datetimepicker setCreated classAiNode inputAiNode{{ result.nodeResource }}Created "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_created"
                      value="{%- if "Page" == classApiMethodMethod and result.created is defined %}{{ formatZonedDateTime(result.created, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      data-zone="{{ defaultZoneId }}"
                      >
                  </wa-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmCreatedAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputCreatedAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputModifiedAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_modified">
  {%- endif %}
                  <wa-input
                      type="datetime-local"
                      readonly
                      hint="A modified timestamp for this record in the database"
                      label="modified {{ formatZonedDateTime(result.modified, "'['VV']'", defaultLocaleId, defaultZoneId) | e }}"
                      class="label-on-left {{classApiMethodMethod}}_modified datetimepicker setModified classAiNode inputAiNode{{ result.nodeResource }}Modified "
                      placeholder="MM/dd/yyyy h:mm a '['VV']'"
                      data-timeformat="MM/dd/yyyy h:mm a '['VV']'"
                      id="{{classApiMethodMethod}}_modified"
                      value="{%- if "Page" == classApiMethodMethod and result.modified is defined %}{{ formatZonedDateTime(result.modified, "yyyy-MM-dd'T'HH:mm", defaultLocaleId, defaultZoneId) | e }}{%- endif %}"
  {%- if 'Page' == classApiMethodMethod %}
  {%- endif %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      data-zone="{{ defaultZoneId }}"
                      >
                  </wa-input>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmModifiedAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputModifiedAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputArchivedAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_archived">
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                  <wa-button variant="brand"
                      id="{{classApiMethodMethod}}_archived"
                      placeholder="archive"
                      label="archive"
                      hint="For archiving this record"
                      class="label-on-left {{classApiMethodMethod}}_archived classAiNode inputAiNode{{ result.nodeResource }}Archived "
                      name="setArchived"
                      data-nodeResource={{ result.nodeResource | tojson }}
                      data-val="{{ result.archived | e }}"
                      >archive</wa-button>
  {%- else %}
  {%- if 'Page' == classApiMethodMethod %}
                  <wa-checkbox
                      id="{{classApiMethodMethod}}_archived"
                      value="true"
  {%- else %}
                  <wa-select
                      id="{{classApiMethodMethod}}_archived"
  {%- endif %}
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="archive"
                      label="archive"
                      hint="For archiving this record"
  {%- if 'Page' == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_archived classAiNode inputAiNode{{ result.nodeResource }}Archived "
                      name="setArchived"
  {%- else %}
    {%- if 'Page' == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_archived classAiNode inputAiNode{{ result.nodeResource }}Archived "
                      name="setArchived"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_archived setArchived valueArchived classAiNode inputAiNode{{ result.nodeResource }}Archived "
                      name="setArchived"
    {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
    {%- if result.archived == true %}
                      checked
    {%- endif %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      >archive</wa-checkbox>
  {%- else %}
                      >
                    <wa-option value=""></wa-option>
                    <wa-option value="true">true</wa-option>
                    <wa-option value="false">false</wa-option>
                  </wa-select>
  {%- endif %}
  {%- endif %}
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmArchivedAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputArchivedAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputHubIdAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_hubId">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] ACM Hub"
                      label="ACM Hub"
                      hint="
The name of the ACM Hub for this cluster in Prometheus Keycloak Proxy. "
                      id="{{classApiMethodMethod}}_hubId"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_hubId setHubId classAiNode inputAiNode{{ result.nodeResource }}HubId "
                      name="setHubId"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_hubId setHubId classAiNode inputAiNode{{ result.nodeResource }}HubId "
                      name="setHubId"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_hubId valueHubId classAiNode inputAiNode{{ result.nodeResource }}HubId "
                      name="hubId"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.hubId | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmHubIdAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputHubIdAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputClusterNameAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_clusterName">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] cluster name"
                      label="cluster name"
                      hint="
The name of this cluster"
                      id="{{classApiMethodMethod}}_clusterName"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_clusterName setClusterName classAiNode inputAiNode{{ result.nodeResource }}ClusterName "
                      name="setClusterName"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_clusterName setClusterName classAiNode inputAiNode{{ result.nodeResource }}ClusterName "
                      name="setClusterName"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_clusterName valueClusterName classAiNode inputAiNode{{ result.nodeResource }}ClusterName "
                      name="clusterName"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.clusterName | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmClusterNameAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputClusterNameAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNodeNameAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_nodeName">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] node name"
                      label="node name"
                      hint="
The name of this node"
                      id="{{classApiMethodMethod}}_nodeName"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_nodeName setNodeName classAiNode inputAiNode{{ result.nodeResource }}NodeName "
                      name="setNodeName"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_nodeName setNodeName classAiNode inputAiNode{{ result.nodeResource }}NodeName "
                      name="setNodeName"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_nodeName valueNodeName classAiNode inputAiNode{{ result.nodeResource }}NodeName "
                      name="nodeName"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.nodeName | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNodeNameAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNodeNameAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputDescriptionAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_description">
  {%- endif %}
                  <wa-textarea resize="auto"
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] description"
                      label="description"
                      hint="
A description of this node"
                      id="{{classApiMethodMethod}}_description"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_description setDescription classAiNode inputAiNode{{ result.nodeResource }}Description "
                      name="setDescription"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_description setDescription classAiNode inputAiNode{{ result.nodeResource }}Description "
                      name="setDescription"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_description valueDescription classAiNode inputAiNode{{ result.nodeResource }}Description "
                      name="description"
    {%- endif %}
  {%- endif %}
{%- if "Page" == classApiMethodMethod %}
                      value="{{result.description | e }}"
{%- endif %}
                      >
</wa-textarea>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmDescriptionAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputDescriptionAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputIdAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_id">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] entity ID"
                      label="entity ID"
                      hint="
A unique ID for this Smart Data Model"
                      id="{{classApiMethodMethod}}_id"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_id setId classAiNode inputAiNode{{ result.nodeResource }}Id "
                      name="setId"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_id setId classAiNode inputAiNode{{ result.nodeResource }}Id "
                      name="setId"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_id valueId classAiNode inputAiNode{{ result.nodeResource }}Id "
                      name="id"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.id | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmIdAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputIdAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputGpuDevicesTotalAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_gpuDevicesTotal">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[Integer] GPU devices total"
                      label="GPU devices total"
                      type="number"
                      hint="
The total number of GPU devices on this cluster. "
                      id="{{classApiMethodMethod}}_gpuDevicesTotal"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_gpuDevicesTotal setGpuDevicesTotal classAiNode inputAiNode{{ result.nodeResource }}GpuDevicesTotal "
                      name="setGpuDevicesTotal"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_gpuDevicesTotal setGpuDevicesTotal classAiNode inputAiNode{{ result.nodeResource }}GpuDevicesTotal "
                      name="setGpuDevicesTotal"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_gpuDevicesTotal valueGpuDevicesTotal classAiNode inputAiNode{{ result.nodeResource }}GpuDevicesTotal "
                      name="gpuDevicesTotal"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.gpuDevicesTotal | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmGpuDevicesTotalAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputGpuDevicesTotalAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNgsildTenantAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_ngsildTenant">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] NGSILD-Tenant"
                      label="NGSILD-Tenant"
                      hint="
The NGSILD-Tenant or Fiware-Service"
                      id="{{classApiMethodMethod}}_ngsildTenant"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_ngsildTenant setNgsildTenant classAiNode inputAiNode{{ result.nodeResource }}NgsildTenant "
                      name="setNgsildTenant"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildTenant setNgsildTenant classAiNode inputAiNode{{ result.nodeResource }}NgsildTenant "
                      name="setNgsildTenant"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildTenant valueNgsildTenant classAiNode inputAiNode{{ result.nodeResource }}NgsildTenant "
                      name="ngsildTenant"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.ngsildTenant | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNgsildTenantAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNgsildTenantAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNgsildPathAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_ngsildPath">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] NGSILD-Path"
                      label="NGSILD-Path"
                      hint="
The NGSILD-Path or Fiware-ServicePath"
                      id="{{classApiMethodMethod}}_ngsildPath"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_ngsildPath setNgsildPath classAiNode inputAiNode{{ result.nodeResource }}NgsildPath "
                      name="setNgsildPath"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildPath setNgsildPath classAiNode inputAiNode{{ result.nodeResource }}NgsildPath "
                      name="setNgsildPath"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildPath valueNgsildPath classAiNode inputAiNode{{ result.nodeResource }}NgsildPath "
                      name="ngsildPath"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.ngsildPath | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNgsildPathAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNgsildPathAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNgsildContextAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_ngsildContext">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[String] NGSILD context"
                      label="NGSILD context"
                      hint="
The NGSILD context URL for @context data"
                      id="{{classApiMethodMethod}}_ngsildContext"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_ngsildContext setNgsildContext classAiNode inputAiNode{{ result.nodeResource }}NgsildContext "
                      name="setNgsildContext"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildContext setNgsildContext classAiNode inputAiNode{{ result.nodeResource }}NgsildContext "
                      name="setNgsildContext"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildContext valueNgsildContext classAiNode inputAiNode{{ result.nodeResource }}NgsildContext "
                      name="ngsildContext"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{result.ngsildContext | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNgsildContextAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNgsildContextAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputNgsildDataAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_ngsildData">
  {%- endif %}
                  <wa-textarea resize="auto"
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[JsonObject] NGSILD data"
                      label="NGSILD data"
                      hint="
The NGSILD data with @context from the context broker"
                      id="{{classApiMethodMethod}}_ngsildData"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_ngsildData setNgsildData classAiNode inputAiNode{{ result.nodeResource }}NgsildData "
                      name="setNgsildData"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildData setNgsildData classAiNode inputAiNode{{ result.nodeResource }}NgsildData "
                      name="setNgsildData"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_ngsildData valueNgsildData classAiNode inputAiNode{{ result.nodeResource }}NgsildData "
                      name="ngsildData"
    {%- endif %}
  {%- endif %}
{%- if "Page" == classApiMethodMethod %}
                      value="{{ toJsonObjectString(result.ngsildData) | e }}"
{%- endif %}
                      >
</wa-textarea>
  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmNgsildDataAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputNgsildDataAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}
{%- macro inputLocationAiNodePage(classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) %}
  {%- if 'Page' == classApiMethodMethod %}
                <form class="subgrid-2col " id="PageForm_location">
  {%- endif %}
                  <wa-input
                      {% if authForWriteBool == true %}clearable{% else %}readonly{% endif %}
                      placeholder="[Point] location"
                      label="location"
                      hint="
Geojson reference to the item. It can be Point, LineString, Polygon, MultiPoint, MultiLineString or MultiPolygon"
                      id="{{classApiMethodMethod}}_location"
  {%- if "Page" == classApiMethodMethod %}
                      data-nodeResource={{ result.nodeResource | tojson }}
                      class="label-on-left {{classApiMethodMethod}}_location setLocation classAiNode inputAiNode{{ result.nodeResource }}Location "
                      name="setLocation"
  {%- else %}
    {%- if "PATCH" == classApiMethodMethod %}
                      class="label-on-left {{classApiMethodMethod}}_location setLocation classAiNode inputAiNode{{ result.nodeResource }}Location "
                      name="setLocation"
    {%- else %}
                      class="label-on-left {{classApiMethodMethod}}_location valueLocation classAiNode inputAiNode{{ result.nodeResource }}Location "
                      name="location"
    {%- endif %}
  {%- endif %}
  {%- if "Page" == classApiMethodMethod %}
                      value="{{ toJsonObjectString(result.location) | e }}"
  {%- endif %}
                      ></wa-input>

  {%- if 'Page' == classApiMethodMethod %}
                </form>
  {%- endif %}
{%- endmacro %}

{%- macro htmLocationAiNodePage(classApiMethodMethod, authForWriteBool=false, authForReadBool=false) %}
                            {{ inputLocationAiNodePage(classApiMethodMethod=classApiMethodMethod, authForWrite=authForWrite, authForRead=authForRead) }}
{%- endmacro %}

{%- macro htmButton_patchAiNode() %}<wa-button variant="brand" id="htmButton_patchAiNode" data-nodeResource={{ result.nodeResource | tojson }}><wa-icon slot="start" class="{{ FONTAWESOME_STYLE }} fa-edit "></wa-icon>Modify</wa-button>{%- endmacro %}

{%- macro htmFormButton_patchAiNode() %}
          <wa-popup  auto-size="both" placement="top" id="alertButton_patchAiNode" duration="5000" closable class="wa-header-l ">
            <wa-button slot="anchor" variant="brand" slot="footer" type="submit"
                 id="htmFormButton_patchAiNode"
                >Modify AI node</wa-button>
            <wa-badge class="alertPopup" id="alertPopupButton_patchAiNode"></wa-badge>
          </wa-popup>
{%- endmacro %}

{%- macro htmForm_patchAiNode() %}
        <wa-dialog with-header with-footer style="--width: 50vw; " id="patchAiNodeDialog" label="Modify AI node">
          <form id="htmForm_patchAiNode" class="round-row primary-smart-border-radius ">
            <wa-details open class="HtmRow" id="ai-node-details">
              <div slot="summary">
                <span>AI node details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmHubIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmHubIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmHubIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmClusterNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNodeNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDescriptionAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmIdAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmNgsildTenantAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildPathAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildContextAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildDataAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmLocationAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='PATCH', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </wa-details>
          </form>
          {{ htmFormButton_patchAiNode() }}
        </wa-dialog>
{%- endmacro %}

{%- macro htmButton_postAiNode() %}<wa-button variant="brand" id="htmButton_postAiNode" data-nodeResource={{ result.nodeResource | tojson }}><wa-icon slot="start" class="{{ FONTAWESOME_STYLE }} fa-file-plus "></wa-icon>Create</wa-button>{%- endmacro %}

{%- macro htmFormButton_postAiNode() %}
          <wa-popup  auto-size="both" placement="top" id="alertButton_postAiNode" duration="5000" closable class="wa-header-l ">
            <wa-button slot="anchor" variant="brand" slot="footer" type="submit"
                 id="htmFormButton_postAiNode"
                >Create an AI node</wa-button>
            <wa-badge class="alertPopup" id="alertPopupButton_postAiNode"></wa-badge>
          </wa-popup>
{%- endmacro %}

{%- macro htmForm_postAiNode() %}
        <wa-dialog with-header with-footer style="--width: 50vw; " id="postAiNodeDialog" label="Create an AI node">
          <form id="htmForm_postAiNode" class="round-row primary-smart-border-radius ">
            <div>You can override any default values below: </div>
            <wa-details open class="HtmRow" id="ai-node-details">
              <div slot="summary">
                <span>AI node details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "POST" in scopes %}
                {{ htmHubIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmHubIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmHubIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "POST" in scopes %}
                {{ htmClusterNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "POST" in scopes %}
                {{ htmNodeNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "POST" in scopes %}
                {{ htmDescriptionAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "POST" in scopes %}
                {{ htmIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmIdAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "POST" in scopes %}
                {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "POST" in scopes %}
                {{ htmNgsildTenantAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "POST" in scopes %}
                {{ htmNgsildPathAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "POST" in scopes %}
                {{ htmNgsildContextAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "POST" in scopes %}
                {{ htmNgsildDataAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "POST" in scopes %}
                {{ htmLocationAiNodePage(classApiMethodMethod='POST', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='POST', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </wa-details>
          </form>
          {{ htmFormButton_postAiNode() }}
        </wa-dialog>
{%- endmacro %}

{%- macro htmButton_deleteAiNode() %}<wa-button variant="brand" id="htmButton_deleteAiNode" data-nodeResource={{ result.nodeResource | tojson }}><wa-icon slot="start" class="{{ FONTAWESOME_STYLE }} fa-trash "></wa-icon>Delete</wa-button>{%- endmacro %}

{%- macro htmFormButton_deleteAiNode() %}
          <wa-popup  auto-size="both" placement="top" id="alertButton_deleteAiNode" duration="5000" closable class="wa-header-l ">
            <wa-button slot="anchor" variant="brand" slot="footer" type="submit"
                 id="htmFormButton_deleteAiNode"
                >Delete AI node</wa-button>
            <wa-badge class="alertPopup" id="alertPopupButton_deleteAiNode"></wa-badge>
          </wa-popup>
{%- endmacro %}

{%- macro htmForm_deleteAiNode() %}
        <wa-dialog with-header with-footer style="--width: 50vw; " id="deleteAiNodeDialog" label="Delete AI node">
          <form id="htmForm_deleteAiNode" class="round-row primary-smart-border-radius ">
          </form>
          {{ htmFormButton_deleteAiNode() }}
        </wa-dialog>
{%- endmacro %}

{%- macro htmButton_putimportAiNode() %}<wa-button variant="brand" id="htmButton_putimportAiNode" data-nodeResource={{ result.nodeResource | tojson }}><wa-icon slot="start" class="{{ FONTAWESOME_STYLE }} fa-file-import "></wa-icon>Import</wa-button>{%- endmacro %}

{%- macro htmFormButton_putimportAiNode() %}
          <wa-popup  auto-size="both" placement="top" id="alertButton_putimportAiNode" duration="5000" closable class="wa-header-l ">
            <wa-button slot="anchor" variant="brand" slot="footer" type="submit"
                 id="htmFormButton_putimportAiNode"
                >Import AI nodes</wa-button>
            <wa-badge class="alertPopup" id="alertPopupButton_putimportAiNode"></wa-badge>
          </wa-popup>
{%- endmacro %}

{%- macro htmForm_putimportAiNode() %}
        <wa-dialog with-header with-footer style="--width: 50vw; " id="putimportAiNodeDialog" label="Import AI nodes">
          <form id="htmForm_putimportAiNode" class="round-row primary-smart-border-radius ">
            <div>
              <wa-textarea
                  class="PUTImport_searchList "
                  style="height: 300px; "
                  placeholder="{ 'searchList': [ { 'nodeResource': ... , 'saves': [ ... ] }, ... ] }"
                  >
              </wa-textarea>
            </div>
          </form>
          {{ htmFormButton_putimportAiNode() }}
        </wa-dialog>
{%- endmacro %}

{%- macro htmButton_searchpageAiNode() %}{%- endmacro %}

{%- macro htmFormButton_searchpageAiNode() %}
          <wa-popup  auto-size="both" placement="top" id="alertButton_searchpageAiNode" duration="5000" closable class="wa-header-l ">
            <wa-button slot="anchor" variant="brand" slot="footer" type="submit"
                 id="htmFormButton_searchpageAiNode"
                >Search AI nodes</wa-button>
            <wa-badge class="alertPopup" id="alertPopupButton_searchpageAiNode"></wa-badge>
          </wa-popup>
{%- endmacro %}

{%- macro htmForm_searchpageAiNode() %}
        <div with-header with-footer style="--width: 50vw; " id="searchpageAiNodeDialog" label="Search AI nodes">
          <div id="htmForm_searchpageAiNode" class="round-row primary-smart-border-radius ">
            <wa-details class="HtmRow" id="primary-key-id-created-modified-archive-details">
              <div slot="summary">
                <span>primary key, ID, created, modified, archive details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmPkAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmPkAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmPkAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmCreatedAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmCreatedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmCreatedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmModifiedAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmModifiedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmModifiedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmArchivedAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmArchivedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmArchivedAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </wa-details>
            <wa-details open class="HtmRow" id="ai-node-details">
              <div slot="summary">
                <span>AI node details</span>
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmHubIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmHubIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmHubIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmClusterNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmClusterNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNodeNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNodeNameAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmDescriptionAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmDescriptionAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmIdAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmGpuDevicesTotalAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmNgsildTenantAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildTenantAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildPathAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildPathAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildContextAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildContextAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}

              {%- if "PATCH" in scopes %}
                {{ htmNgsildDataAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmNgsildDataAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
              <div class="grid-with-subgrid-2col ">

              {%- if "PATCH" in scopes %}
                {{ htmLocationAiNodePage(classApiMethodMethod='Page', authForWriteBool=true, authForReadBool=true) }}
              {%- else %}
                {%- if "GET" in scopes %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=true) }}
                {%- else %}
                  {{ htmLocationAiNodePage(classApiMethodMethod='Page', authForWriteBool=false, authForReadBool=false) }}
                {%- endif %}
              {%- endif %}
              </div>
            </wa-details>
          </div>
        </div>
{%- endmacro %}

{%- macro htmButton_deletefilterAiNode() %}<wa-button variant="brand" id="htmButton_deletefilterAiNode" data-nodeResource={{ result.nodeResource | tojson }}><wa-icon slot="start" class="{{ FONTAWESOME_STYLE }} fa-trash "></wa-icon>Delete</wa-button>{%- endmacro %}

{%- macro htmFormButton_deletefilterAiNode() %}
          <wa-popup  auto-size="both" placement="top" id="alertButton_deletefilterAiNode" duration="5000" closable class="wa-header-l ">
            <wa-button slot="anchor" variant="brand" slot="footer" type="submit"
                 id="htmFormButton_deletefilterAiNode"
                >Delete AI node</wa-button>
            <wa-badge class="alertPopup" id="alertPopupButton_deletefilterAiNode"></wa-badge>
          </wa-popup>
{%- endmacro %}

{%- macro htmForm_deletefilterAiNode() %}
        <wa-dialog with-header with-footer style="--width: 50vw; " id="deletefilterAiNodeDialog" label="Delete AI node">
          <form id="htmForm_deletefilterAiNode" class="round-row primary-smart-border-radius ">
          </form>
          {{ htmFormButton_deletefilterAiNode() }}
        </wa-dialog>
{%- endmacro %}
          <div id="htmSearchForm">
            <wa-scroller>
              <wa-button-group>
{% if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {% if "PATCH" in scopes %}
    {% if resultCount >= 1 %}
                <wa-button variant="brand" id="refreshThisAiNodeGenPage"
                     onclick="patch{{classSimpleName}}Vals( [ {name: 'fq', value: 'nodeResource:{{ result.nodeResource }}' } ], {}, this, function() { addGlow(document.querySelector('#refreshThisAiNodeGenPage')); }, function() { addError(document.querySelector('#refreshThisAiNodeGenPage')); }); return false; ">
                  <wa-icon slot="start" class="{{ FONTAWESOME_STYLE }} fa-sync-alt "></wa-icon>
                  refresh
                </wa-button>
    {% endif %}
    {% if resultCount > 0 %}
                <wa-button variant="brand" id="refreshAllAiNodeGenPage{{ result.nodeResource | e }}"
                     onclick="patch{{classSimpleName}}Vals([], {}, this, function() { addGlow(document.querySelector('#refreshAllAiNodeGenPage{{ result.nodeResource | e }}')); }, function() { addError(document.querySelector('#refreshAllAiNodeGenPage{{ result.nodeResource | e }}')); }); "
                    >
                  <wa-icon slot="start" class="{{ FONTAWESOME_STYLE }} fa-arrows-rotate"></wa-icon>
                  Refresh all 
                </wa-button>
    {% endif %}
  {% endif %}
{% endif %}
{%- if 'PATCH' in scopes %}
  {%- if resultCount > 0 %}
    {%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
    {{ htmButton_patchAiNode() }}
    {%- endif %}
  {%- endif %}
{%- endif %}
{%- if 'POST' in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmButton_postAiNode() }}
  {%- else %}
    {{ htmButton_postAiNode() }}
  {%- endif %}
{%- endif %}
{%- if 'DELETE' in scopes %}
  {%- if result is defined %}
    {{ htmButton_deleteAiNode() }}
  {%- endif %}
{%- endif %}
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {{ htmButton_putimportAiNode() }}
{%- endif %}
{%- if 'DELETE' in scopes %}
  {%- if result is not defined %}
    {%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
    {{ htmButton_deletefilterAiNode() }}
    {%- endif %}
  {%- endif %}
{%- endif %}

              </wa-button-group>
            </wa-scroller>
          </div>
{%- if 'DELETE' in scopes %}
    {{ htmForm_patchAiNode() }}
  {%- endif %}
{%- endif %}
{%- if 'POST' in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmForm_postAiNode() }}
  {%- else %}
    {{ htmForm_postAiNode() }}
  {%- endif %}
{%- endif %}
{%- if 'DELETE' in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmForm_deleteAiNode() }}
  {%- else %}
  {%- endif %}
{%- endif %}
{%- if AUTH_SCOPE_SUPER_ADMIN in scopes %}
  {{ htmForm_putimportAiNode() }}
{%- endif %}
{%- if 'DELETE' in scopes %}
  {%- if resultCount >= 1 %}
    {{ htmForm_deletefilterAiNode() }}
  {%- else %}
  {%- endif %}
{%- endif %}
