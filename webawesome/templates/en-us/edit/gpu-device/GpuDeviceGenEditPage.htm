{% extends "en-us/PageLayout.htm" %}
{%- block htmTitlePageLayout %}
{%- block htmTitleGpuDevicePage %}
    <title>{{ result.objectTitle }}</title>
{%- endblock htmTitleGpuDevicePage %}
{%- endblock htmTitlePageLayout %}

{%- block htmStylesPageLayout %}
{{ super() }}
    <link rel="stylesheet" href="{{ staticBaseUrl }}/css/en-us/search/gpu-device/GpuDevice.css"/>
{%- block htmStylesGpuDevicePage %}
{%- endblock htmStylesGpuDevicePage %}
{%- endblock htmStylesPageLayout %}

{%- block htmStylePageLayout %}
      :root {
        --site-results-number-of-columns: 4;
      }
{{ super() }}
{%- block htmStyleGpuDevicePage %}
{%- endblock htmStyleGpuDevicePage %}
{%- endblock htmStylePageLayout %}

{%- block htmScriptsPageLayout %}
{{ super() }}
{%- block htmScriptsGpuDevicePage %}
    <script src="{{staticBaseUrl}}/js/en-us/search/gpu-device/GpuDevice.js"></script>
    <script type="module" src="{{staticBaseUrl}}/js/en-us/search/gpu-device/GpuDeviceSearchPage.js"></script>
    <script type="module" src="{{staticBaseUrl}}/js/en-us/search/gpu-device/GpuDeviceEditPage.js"></script>
    <script src="{{staticBaseUrl}}/js/en-us/search/hub/Hub.js"></script>
    <script src="{{staticBaseUrl}}/js/en-us/search/cluster/Cluster.js"></script>
    <script src="{{staticBaseUrl}}/js/en-us/search/ai-node/AiNode.js"></script>
{%- endblock htmScriptsGpuDevicePage %}
{%- endblock htmScriptsPageLayout %}

{%- block htmScriptPageLayout %}
{%- block htmScriptGpuDevicePage %}
    <script>

      function jsWebsocketGpuDevice(gpuDeviceResource, vars, $response) {
{%- block jsWebsocketGpuDevicePage %}{%- endblock %}
      }

      function jsTooltipGpuDevice(e, feature) {
{%- block jsTooltipGpuDevicePage %}{%- endblock %}
      }

      function htmTooltipGpuDevice(feature, layer) {
        return `{%- block htmTooltipGpuDevicePage %}
<h3><wa-icon class="{{ classIconCssClasses }}  "></wa-icon><a href="${quoteattr(feature.properties.editPage)}">${feature.properties.objectTitle}</a></h3>
{%- endblock htmTooltipGpuDevicePage %}`;
      }

      function jsLegendGpuDevice(map) {
{%- block jsLegendGpuDevicePage %}
        var div = L.DomUtil.create('div', 'info legend');
        var htm = '';
        window.listGpuDevice.forEach((result, index) => {
          if(result.location) {
            var shapes = [];
            if(Array.isArray(result.location))
              shapes = shapes.concat(result.location);
            else
              shapes.push(result.location);
            shapes.forEach(function(shape, index) {
              htm += htmLegendGpuDevice(map, shape, result, index, shapes.length);
            });
          }
        });
        div.innerHTML = htm;
        return div;
{%- endblock jsLegendGpuDevicePage %}
      }

      function htmLegendGpuDevice(map, shape, result, index, count) {
        var color = result.locationColors[index];
        var title = result.locationTitles[index];
        var url = result.locationLinks[index];
        var htm = '';
        htm += `<div class="cursor-pointer " style="max-width: 400px; ">
`;
        htm += `{%- block htmLegendGpuDevicePage %}
    <div title="${quoteattr(title)}">
    <div style="width: 20px; ">
      <wa-icon class="{{ FONTAWESOME_STYLE }} fa-circle" style="color: ${color}; "></wa-icon>
    </div>
    <div class="text-overflow-ellipsis ">
      <span class="" data-solrId="${result.solrId}" onclick="window.mapLayers[this.getAttribute('data-solrId')].openPopup(); return false;" href="">${title}</span>
    </div>
    </div>
{%- endblock htmLegendGpuDevicePage %}`;
        htm += `
</div>
`;
        return htm;
      }

      function jsStyleGpuDevice(feature) {
{%- block jsStyleGpuDevicePage %}
        if(feature.geometry.type == 'Point') {
          return {
            radius: 8
            , fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 1
            , opacity: 0.7
            , fillOpacity: 0.7
            , contextmenu: true
            , contextmenuItems: [
              {
                text: 'Show coordinates'
                , callback: function(event) {
                  alert(event2.target.getLatLngs());
                }
              }
            ]
          };
        } else if(feature.geometry.type == 'LineString') {
          return {
            color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 5
            , opacity: 0.7
          };
        } else {
          return {
             fillColor: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , color: (feature.properties.areaServedColors && feature.properties.areaServedColors[feature.index] ? feature.properties.areaServedColors[feature.index] : (feature.properties.color ? feature.properties.color : '#000'))
            , weight: 3
            , opacity: 0.7
            , fillOpacity: 0.7
          };
        }
{%- endblock jsStyleGpuDevicePage %}
      }
    </script>
    <script type="module">
{% if DEFAULT_MAP_LOCATION is defined %}
      window.DEFAULT_MAP_LOCATION = { type: 'Point', coordinates: [ {{ DEFAULT_MAP_LOCATION.coordinates[0] }}, {{ DEFAULT_MAP_LOCATION.coordinates[1] }} ]};
{% endif %}
{% if DEFAULT_MAP_ZOOM is defined %}
      window.DEFAULT_MAP_ZOOM = {{ DEFAULT_MAP_ZOOM }};
{% endif %}
      window.DEFAULT_ZONE_ID = '{{ defaultZoneId }}';
      Promise.all([
        customElements.whenDefined('wa-button')
        , customElements.whenDefined('wa-input')
        , customElements.whenDefined('wa-select')
      ]).then(() => {

        var gpuDeviceResource = {% if result.gpuDeviceResource is defined %}{{ result.gpuDeviceResource | tojson }}{% else %}null{% endif %};

        if(gpuDeviceResource == null) {
          document.querySelector('#grid-toggle-details')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-list', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-details');
          });
          document.querySelector('#grid-toggle-list')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-card');
            document.querySelector('#site-results-grid').classList.add('grid-mode-list');
          });
          document.querySelector('#grid-toggle-card')?.addEventListener('click', () => {
            document.querySelector('#site-results-grid').classList.remove('grid-mode-details', 'grid-mode-list');
            document.querySelector('#site-results-grid').classList.add('grid-mode-card');
          });
        } else {
          var o = document.querySelector('.pageForm .result')?.value;
          if(o)
            window.result = JSON.parse(o);
        {% if result.gpuDeviceResource is defined %}
          function relate_hubResource(event) {
            suggestGpuDeviceHubResource(
                event.target.value ? [ { 'name': 'q', 'value': 'objectSuggest:' + event.target.value }
                , { 'name': 'rows', 'value': '10' }
                , { 'name': 'fl', 'value': 'classCanonicalName,hubResource,pk,editPage,objectTitle' } ] : [{%- if result.hubResource is defined %}{'name':'fq','value':'hubResource:{{ result.hubResource }}'}{%- else %}{%- endif %}]
                , document.querySelector('#' + event.target.getAttribute('data-list'))
                , window.result.gpuDeviceResource
                , window.result.hubResource
                , true
                );
          }
          document.querySelector('#POST_hubResource')?.addEventListener('input', relate_hubResource);
          document.querySelector('#POST_hubResource')?.addEventListener('focus', relate_hubResource);
          document.querySelector('#PATCH_hubResource')?.addEventListener('input', relate_hubResource);
          document.querySelector('#PATCH_hubResource')?.addEventListener('focus', relate_hubResource);
          document.querySelector('#Page_hubResource')?.addEventListener('input', relate_hubResource);
          document.querySelector('#Page_hubResource')?.addEventListener('focus', relate_hubResource);
          {% if "PATCH" in scopes %}
          suggestGpuDeviceHubResource([{'name':'fq','value':'hubResource:' + window.result.hubResource}], document.querySelector('#listGpuDeviceHubResource_Page'), window.result.gpuDeviceResource, window.result.hubResource, true);
          {% else %}
          {% if "GET" in scopes %}
          suggestGpuDeviceHubResource([{'name':'fq','value':'hubResource:' + window.result.hubResource}], document.querySelector('#listGpuDeviceHubResource_Page'), window.result.gpuDeviceResource, window.result.hubResource, true);
          {% else %}
          suggestGpuDeviceHubResource([{'name':'fq','value':'hubResource:' + window.result.hubResource}], document.querySelector('#listGpuDeviceHubResource_Page'), window.result.gpuDeviceResource, window.result.hubResource, false);
          {% endif %}
          {% endif %}
          function relate_clusterResource(event) {
            suggestGpuDeviceClusterResource(
                event.target.value ? [ { 'name': 'q', 'value': 'objectSuggest:' + event.target.value }
                , { 'name': 'rows', 'value': '10' }
                , { 'name': 'fl', 'value': 'classCanonicalName,clusterResource,pk,editPage,objectTitle' } ] : [{%- if result.clusterResource is defined %}{'name':'fq','value':'clusterResource:{{ result.clusterResource }}'}{%- else %}{%- endif %}]
                , document.querySelector('#' + event.target.getAttribute('data-list'))
                , window.result.gpuDeviceResource
                , window.result.clusterResource
                , true
                );
          }
          document.querySelector('#POST_clusterResource')?.addEventListener('input', relate_clusterResource);
          document.querySelector('#POST_clusterResource')?.addEventListener('focus', relate_clusterResource);
          document.querySelector('#PATCH_clusterResource')?.addEventListener('input', relate_clusterResource);
          document.querySelector('#PATCH_clusterResource')?.addEventListener('focus', relate_clusterResource);
          document.querySelector('#Page_clusterResource')?.addEventListener('input', relate_clusterResource);
          document.querySelector('#Page_clusterResource')?.addEventListener('focus', relate_clusterResource);
          {% if "PATCH" in scopes %}
          suggestGpuDeviceClusterResource([{'name':'fq','value':'clusterResource:' + window.result.clusterResource}], document.querySelector('#listGpuDeviceClusterResource_Page'), window.result.gpuDeviceResource, window.result.clusterResource, true);
          {% else %}
          {% if "GET" in scopes %}
          suggestGpuDeviceClusterResource([{'name':'fq','value':'clusterResource:' + window.result.clusterResource}], document.querySelector('#listGpuDeviceClusterResource_Page'), window.result.gpuDeviceResource, window.result.clusterResource, true);
          {% else %}
          suggestGpuDeviceClusterResource([{'name':'fq','value':'clusterResource:' + window.result.clusterResource}], document.querySelector('#listGpuDeviceClusterResource_Page'), window.result.gpuDeviceResource, window.result.clusterResource, false);
          {% endif %}
          {% endif %}
          function relate_nodeResource(event) {
            suggestGpuDeviceNodeResource(
                event.target.value ? [ { 'name': 'q', 'value': 'objectSuggest:' + event.target.value }
                , { 'name': 'rows', 'value': '10' }
                , { 'name': 'fl', 'value': 'classCanonicalName,nodeResource,pk,editPage,objectTitle' } ] : [{%- if result.nodeResource is defined %}{'name':'fq','value':'nodeResource:{{ result.nodeResource }}'}{%- else %}{%- endif %}]
                , document.querySelector('#' + event.target.getAttribute('data-list'))
                , window.result.gpuDeviceResource
                , window.result.nodeResource
                , true
                );
          }
          document.querySelector('#POST_nodeResource')?.addEventListener('input', relate_nodeResource);
          document.querySelector('#POST_nodeResource')?.addEventListener('focus', relate_nodeResource);
          document.querySelector('#PATCH_nodeResource')?.addEventListener('input', relate_nodeResource);
          document.querySelector('#PATCH_nodeResource')?.addEventListener('focus', relate_nodeResource);
          document.querySelector('#Page_nodeResource')?.addEventListener('input', relate_nodeResource);
          document.querySelector('#Page_nodeResource')?.addEventListener('focus', relate_nodeResource);
          {% if "PATCH" in scopes %}
          suggestGpuDeviceNodeResource([{'name':'fq','value':'nodeResource:' + window.result.nodeResource}], document.querySelector('#listGpuDeviceNodeResource_Page'), window.result.gpuDeviceResource, window.result.nodeResource, true);
          {% else %}
          {% if "GET" in scopes %}
          suggestGpuDeviceNodeResource([{'name':'fq','value':'nodeResource:' + window.result.nodeResource}], document.querySelector('#listGpuDeviceNodeResource_Page'), window.result.gpuDeviceResource, window.result.nodeResource, true);
          {% else %}
          suggestGpuDeviceNodeResource([{'name':'fq','value':'nodeResource:' + window.result.nodeResource}], document.querySelector('#listGpuDeviceNodeResource_Page'), window.result.gpuDeviceResource, window.result.nodeResource, false);
          {% endif %}
          {% endif %}
        {% endif %}
        }
        var l = document.querySelector('.pageForm .listGpuDevice')?.value;
        if(l)
          window.listGpuDevice = JSON.parse(l);
        window.varsFq = JSON.parse('{{ toJsonObjectStringInApostrophes(varsFq) }}');
        window.varsRange = JSON.parse('{{ toJsonObjectStringInApostrophes(varsRange) }}');
        window.defaultRangeVar = '{{ defaultRangeVar }}';
        pageGraphGpuDevice();
        {% for key, value in varsQ.items() %}

        document.querySelector('#qGpuDevice_{{ key }}')?.addEventListener('wa-{% if var == 'objectSuggest' %}keyup{% else %}change{% endif %}', event => {
          qChange('GpuDevice', event.target, document.querySelector('#qGpuDeviceDiv_{{ key }}'));
        });
        {% endfor %}

        document.querySelector('#qGpuDevice_rows')?.addEventListener('change', event => {
          paramChange('GpuDevice', event.target, document.querySelector('#qGpuDeviceDiv_rows'));
        });

        document.querySelector('#qGpuDevice_start')?.addEventListener('change', event => {
          paramChange('GpuDevice', event.target, document.querySelector('#qGpuDeviceDiv_start'));
        });


        var submitForm_patchGpuDevice = document.querySelector('#htmForm_patchGpuDevice')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_patchGpuDevice')?.addEventListener('click', event => {
          event.preventDefault();
          patchGpuDevice(null, document.querySelector('#htmForm_patchGpuDevice'), document.querySelector('#htmFormButton_patchGpuDevice'), event.target.getAttribute('data-gpuDeviceResource'));
          return false;
        });

        var submitForm_postGpuDevice = document.querySelector('#htmForm_postGpuDevice')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_postGpuDevice')?.addEventListener('click', event => {
          event.preventDefault();
          postGpuDevice(document.querySelector('#htmForm_postGpuDevice')
          , document.querySelector('#htmFormButton_postGpuDevice')
          , (json, target) => {
            window.location.href = json.editPage;
          });
          return false;
        });

        var submitForm_deleteGpuDevice = document.querySelector('#htmForm_deleteGpuDevice')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_deleteGpuDevice')?.addEventListener('click', event => {
          event.preventDefault();
          deleteGpuDevice(event.target, event.target.getAttribute('data-gpuDeviceResource'));
          return false;
        });

        var submitForm_putimportGpuDevice = document.querySelector('#htmForm_putimportGpuDevice')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_putimportGpuDevice')?.addEventListener('click', event => {
          event.preventDefault();
          putimportGpuDevice(document.querySelector('#htmForm_putimportGpuDevice'), document.querySelector('#htmFormButton_putimportGpuDevice'));
          return false;
        });

        var submitForm_searchpageGpuDevice = document.querySelector('#htmForm_searchpageGpuDevice')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_searchpageGpuDevice')?.addEventListener('click', event => {
          event.preventDefault();
          searchpageGpuDevice();
          return false;
        });

        var submitForm_deletefilterGpuDevice = document.querySelector('#htmForm_deletefilterGpuDevice')?.addEventListener('submit', event => {
          event.preventDefault();
          return false;
        });
        document.querySelector('#htmFormButton_deletefilterGpuDevice')?.addEventListener('click', event => {
          event.preventDefault();
          deletefilterGpuDevice(event.target);
          return false;
        });
{%- block htmScriptInitGpuDevicePage %}{%- endblock htmScriptInitGpuDevicePage %}
      });
    </script>
{%- endblock htmScriptGpuDevicePage %}
{%- endblock htmScriptPageLayout %}

{%- block websocketPageLayout %}
{%- block websocketGpuDevicePage %}
{% if resultCount > 0 %}
        window.eventBus = new EventBus('/eventbus');
        window.eventBus.enableReconnect(true);
        websocketGpuDevice(websocketGpuDeviceInner);
{% endif %}
{%- endblock websocketGpuDevicePage %}
{%- endblock websocketPageLayout %}

{%- block htmUrlGpuDevicePage %}{{pageUri}}?q={{query.q}}&amp;rows={% if rows is defined %}{{rows}}{% else %}{{pagination.rows}}{% endif %}&amp;rows={% if start is defined %}{{start}}{% else %}{{pagination.start}}{% endif %}{% for item query.fq %}{% if fq == item %}{% else %}&fq={{fq}}:{{val}}{% endif %}{% endfor %}{% for item in query.sort %}{% if sort == item %}{% else %}&sort={{var}} {{order}}{% endif %}{% endfor %}{%- endblock htmUrlGpuDevicePage %}

{%- block htmBodyStartPageLayout %}
    {{ super() }}
{%- block htmBodyStartGpuDevicePage %}
{% if resultCount > 0 %}
          <div class="wa-flank ">
            <wa-tooltip for="return-to-GpuDevice">back to all GPU devices</wa-tooltip>
            <wa-button id="return-to-GpuDevice" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
              <wa-icon class="{{ FONTAWESOME_STYLE }} fa-angle-left"></wa-icon>
              all GPU devices
            </wa-button>
            <h1 class="Page_objectTitle"><i class="fa-regular fa-memory"></i> {{ result.objectTitle | e }}</h1>
          </div>
          <div class="margin-block">
          </div>
{% include en-us/search/gpu-device/GpuDeviceSearchForm.htm %}
          <wa-divider></wa-divider>
{% include en-us/search/gpu-device/GpuDeviceSearchButtons.htm %}
{% endif %}
{%- endblock htmBodyStartGpuDevicePage %}
{%- endblock htmBodyStartPageLayout %}

{%- block htmBodyMiddlePageLayout %}
{%- block htmBodyMiddleGpuDevicePage %}
        <div>
{% if resultCount == 0 %}
        <div class="wa-stack ">
          <wa-tooltip for="return-to-GpuDevice">back to all GPU devices</wa-tooltip></wa-tooltip>
          <wa-breadcrumb>
            <wa-breadcrumb-item id="return-to-GpuDevice" variant="brand" href="{{ SITE_BASE_URL }}{{ pageUri }}">
              <i class="fa-regular fa-memory"></i>
              all GPU devices
            </wa-breadcrumb-item>
            <wa-breadcrumb-item>
              no GPU device found
            </wa-breadcrumb-item>
          </wa-breadcrumb>
          <div class="wa-stack wa-align-items-center ">
            <div class="wa-heading-3xl ">
              <i class="fa-regular fa-memory"></i>
            </div>
            <span class="wa-heading-m ">no GPU device found</span>
            <p class="wa-caption-l ">A Red Hat OpenShift GPU device containing GPUs</p>
{% include en-us/search/gpu-device/GpuDeviceSearchForm.htm %}
          </div>
        </div>
{% else %}
{%- include en-us/search/gpu-device/GpuDeviceSidebar.htm %}
{%- include en-us/search/gpu-device/GpuDeviceSuggestedSearch.htm %}
{% endif %}
{%- block htmFormGpuDevicePage %}
          <form action="/en-us/api/gpu-device" id="GpuDeviceForm" class="pageForm " onsubmit="event.preventDefault(); return false; ">
{% if result.gpuDeviceResource is defined %}
            <input name="gpuDeviceResource" class="valueGpuDeviceResource" type="hidden" value="{{ result.gpuDeviceResource }}"/>
            {% endif %}
            <input name="focusId" type="hidden"/>
            <input name="pageResponse" id="pageResponse" class="pageResponse"  value='{{ toJsonObjectStringInApostrophes(pageResponse) }}' type="hidden"/>
            <input name="result" id="result" class="result"  value='{{ toJsonObjectStringInApostrophes(result) }}' type="hidden"/>
            <input name="listGpuDevice" id="listGpuDevice" class="listGpuDevice"  value='{{ toJsonArrayStringInApostrophes(listGpuDevice) }}' type="hidden"/>
          </form>
  {% if solrId is defined %}
          {{ htmButton_searchpageGpuDevice() }}
          {{ htmForm_searchpageGpuDevice() }}
  {% endif %}
{%- endblock htmFormGpuDevicePage %}
        </div>
{%- endblock htmBodyMiddleGpuDevicePage %}
{%- endblock htmBodyMiddlePageLayout %}

{%- block htmBodyEndPageLayout %}
{%- block htmBodyEndGpuDevicePage %}
{%- include en-us/search/gpu-device/GpuDeviceLocation.htm %}
{%- endblock htmBodyEndGpuDevicePage %}
      {{ super() }}
{%- endblock htmBodyEndPageLayout %}
